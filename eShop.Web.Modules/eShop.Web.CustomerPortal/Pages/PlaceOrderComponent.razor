@page "/placeorder"

@inject NavigationManager navigationManager

@inject IViewShoppingCartUseCase viewShoppingCartUseCase
@inject IPlaceOrderUseCase placeOrderUseCase

<h3>Placint Order</h3>
<br />

@if(order != null)
{
	<div class="row">
		<div class="col">
			<CustomerFormComponent OnCustomerInfoSubmitted="HandleCUstomerInfoSubmitted"></CustomerFormComponent>
		</div> 
		<div class="col">
			<OrderSummaryComponent Order="order" HidePlaceOrder="true"></OrderSummaryComponent>
		</div>
	</div>	
}

@code {
	private Order order;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			order = await viewShoppingCartUseCase.Execute();
			StateHasChanged();
		}
	}

	private async void HandleCUstomerInfoSubmitted(CustomerViewModel customer)
	{
		var config = new MapperConfiguration(cfg => cfg.CreateMap<CustomerViewModel, Order>());
		IMapper mapper = config.CreateMapper();
		mapper.Map<CustomerViewModel, Order>(customer, order);

		var orderId = await placeOrderUseCase.Execute(order);
		if (string.IsNullOrEmpty(orderId))
		{
			//TODO: Display error message
		}
		else
		{
			navigationManager.NavigateTo($"/orderconfirm/{orderId}");
		}
	}
}
